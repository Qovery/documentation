## How Qovery works on Managed <%= cloud_provider %> cluster

Qovery is an abstraction layer on top of <%= cloud_provider %> and Kubernetes. Qovery manages the configuration of <%= cloud_provider %> account, and helps you to deploy production ready apps in seconds.
To make it works, Qovery rely on Kubernetes for stateless apps (containers), and  <%= cloud_provider %> for stateful apps (databases, storage...).

[Read more][docs.getting-started.how-qovery-works] on how Qovery works behind the scene.

### Kubernetes

The first time you set up your <%= cloud_provider %> account, Qovery creates a Kubernetes cluster in your chosen region. Qovery managed it for you - no action required. It takes ~15 minutes to configure and bootstrap a Kubernetes cluster. Once bootstrapped, your Kubernetes cluster runs the Qovery app and is ready to deploy your applications.

### Managed services

<%= cloud_provider %> provides managed services for [PostgreSQL][docs.using-qovery.configuration.database.postgresql], [MySQL][docs.using-qovery.configuration.database.mysql], [Redis][docs.using-qovery.configuration.database.redis], [MongoDB][docs.using-qovery.configuration.database.mongodb]. Qovery gives you access to those services when you set the [environment mode][docs.using-qovery.configuration.deployment-rule#environment-deployment-rules] to `Production`. In `Development` mode, Qovery provides containers equivalent, which is cheaper and faster to start.

### Security and compliance

Qovery runs your Kubernetes cluster and is autonomous to manage your applications, which means:
- Your configuration are stored on your <%= cloud_provider %> account.
- Your configuration is encrypted on your <%= cloud_provider %> account.
- Qovery can't access to your data.
- Suppose Qovery stops to run, your applications are not impacted.
