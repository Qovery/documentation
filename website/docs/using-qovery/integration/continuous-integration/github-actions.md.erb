---
last_modified_on: "2020-10-04"
title: "GitHub Actions"
description: "Learn how to connect GitHub Actions to Qovery"
---
import Assumptions from '@site/src/components/Assumptions';

Using GitHub Actions with Qovery is super powerful and gives you the ability to manage the way that you want to deploy your applications. As the possibility are endless, I will share with you a couple of examples that you can use. Feel free to adapt them to your need.

<%= qovery_continuous_integration_common_prerequisites() %>

## GitHub Actions Examples

<Alert type="success">

Qovery is compatible with GitHub Actions and GitHub Actions Enterprise.

</Alert>

### Deploy a container application

<Assumptions>

* You have [connected your Container Registry with Qovery][docs.using-qovery.configuration.organization.container-registry].
* You have a container application that you want to deploy on Qovery.
* You have set the `QOVERY_CLI_ACCESS_TOKEN` environment variable in your GitHub Actions project.

</Assumptions>

This example will deploy a container application with Qovery from your GitHub CI pipeline. Feel free to adapt it to your need.

```yaml title=".github/workflows/deploy-with-qovery.yml"
# 1. Build and Push image to a remote registry
# 2. Deploy with Qovery

name: Publish Docker image and Deploy with Qovery

on:
  release:
    types: [published]

jobs:
  deploy_with_qovery:
    name: Push Docker image to Docker Hub and Deploy with Qovery
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Build and push Docker image
        uses: docker/build-push-action
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy with Qovery
        uses: actions/checkout@v3
        env:
          QOVERY_CLI_ACCESS_TOKEN: ${{ secrets.QOVERY_CLI_ACCESS_TOKEN }}
        shell: bash
        run: |
          # Download and install Qovery CLI
          curl -s https://get.qovery.com | bash

          qovery container deploy \
            --organization <your_org_name> \
            --project <your_project_name> \
            --environment <your_environment_name> \
            --container <your_qovery_container_name> \
            --tag ${{ github.sha }} \
            --watch
```

<%= qovery_continuous_integration_common_scenarios() %>
