{
  "$id": "https://raw.githubusercontent.com/qovery/documentation/master/.meta/schemas/guides.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Qovery Guides Front Matter Schema",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "$schema",
    "author_github",
    "description",
    "last_modified_on",
    "tags",
    "title"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The path to this schema.",
      "enum": ["/.meta/.schemas/guides.json"]
    },
    "author_github": {
      "type": "string",
      "description": "Github URL of the author."
    },
    "cover_label": {
      "type": "string",
      "description": "Optional label for the cover of the guide"
    },
    "description": {
      "type": "string",
      "description": "Short description of the guide."
    },
    "draft": {
      "type": "boolean",
      "description": "Draft mode ensure this guide is not included in releases."
    },
    "hide_pagination": {
      "type": "boolean",
      "description": "Hides the pagination nav"
    },
    "last_modified_on": {
      "type": "string",
      "description": "When the guide was last modified."
    },
    "series_position": {
      "type": "number",
      "description": "If this guide is part of a series, this should specify the position in that series.",
      "minimum": 1
    },
    "tags": {
      "type": "array",
      "description": "Array of tags",
      "items": {
        "type": "string",
        "enum": <%= (
          ["type: guide", "type: post", "type: tutorial", "type: engineering"] +
          metadata.domains.collect { |d| "domain: #{d.name}" } +
          metadata.languages.collect { |l| "language: #{l.name}" } +
          metadata.databases.collect { |d| "database: #{d.name}" } +
          metadata.frameworks.collect { |f| "framework: #{f.name}" } +
          metadata.technologies.collect { |t| "technology: #{t.name}" } +
          metadata.cloud_providers.collect { |t| "cloud_provider: #{t.name}" } +
          metadata.providers.collect { |t| "provider: #{t.name}" }
        ) .to_json %>
      }
    },
    "title": {
      "type": "string",
      "description": "Title of the guide."
    },
    "assumptions": {
      "type": "array",
      "description": "Array of assumptions",
      "items": {
        "type": "string"
      }
    }
  }
}
