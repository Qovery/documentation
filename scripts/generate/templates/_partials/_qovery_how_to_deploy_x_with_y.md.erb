import Assumptions from '@site/src/components/Assumptions';
import Alert from '@site/src/components/Alert';

This tutorial show you how to deploy your [<%= x %>][<%= x_url %>] application with [<%= y %>][<%= y_url %>] database. Let's go!

<Assumptions name="guide">

* Your Operating System is macOS / Windows / Linux
* You have a [Github][urls.github], [Gitlab][urls.gitlab] or [Bitbucket][urls.bitbucket] account

</Assumptions>

> ➡️. Do you migrate from Heroku to AWS? Read [this tutorial][guides.tutorial.migrate-your-application-from-heroku-to-aws] ⬅️

## Steps to deploy <%= x %> with Qovery

<%= qovery_sign_up() %>

## <%= x %> application

### <%= x %> sample application
Get a copy of the sample source code of [<%= x %> sample project][<%= x_sample_application_url %>] by forking it.

To deploy your <%= x %> application connected to a **<%= y %>**, you can use our sample code and follow the configuration steps.

In this example we are using **<%= y %>** **v<%= y_version %>**.

<Steps headingDepth={3}>
<ol>

<%= qovery_add_app(x_sample_application_url, "master") %>

<%= qovery_add_port(port) %>

<li>

### Use Dockerfile

In the settings **General** section, set **Build Mode** to Dockerfile and set Dockerfile path as "Dockerfile". Then **save** your change.

</li>

</ol>
</Steps>

## <%= y %>

<Steps headingDepth={3}>
<ol>

<li>

### Deploy a <%= y %> database

In your environment view, click on **Add** and **Database** buttons:

<p align="center">
  <img src="/img/template-add-db.png" alt="Template DB <%= x %>" />
</p>

In the popup window while adding a database, choose your name, select **<%= y %>** and **<%= y_version %>** version.

<p align="center">
  <img src="/img/template-db.png" alt="Template DB" />
</p>

In the end, click on your added database - in the new screen you'll be able to find the **Deploy** button:

<p align="center">
  <img src="/img/template-deploy-db.png" alt="Template DB" />
</p>

<Alert type="info">

To learn how to add a <%= y %> database in more details, you can [follow this guide][guides.getting-started.create-a-database].

</Alert>

</li>

<li>

### Connect your <%= x %> application to <%= y %>

Credentials of your <%= y %> database are available via **Environment Variables** and **Secrets**. Qovery injects environment vars at the runtime.

You can learn more about environment variables and secrets [here][docs.configuration.environment-variable].

To list all the environment variables available to your <%= x %> application, you can open **Environment Variables** and **Secret** tabs in your application window:

<p align="center">
  <img src="/img/configuration/variables/secret-2.png" alt="Secret" />
</p>

<Alert type="info">

In the **Secrets** section, you'll see all names of injected database secrets, including those for the previously created <%= y %> database.
To connect the <%= x %> app to the <%= y %> database, you need to setup the application to use those secrets.

All you have to do is to open and edit [database configuration file][<%= x_sample_application_url_env_file_url %>] in your forked repository.
Replace all the **QOVERY_DATABASE_XXX** variables with values you have in your own environment. Those variable keys contain your database ID, this is why you need to update the file.

*TIP: you could also make use of **Variable Aliases** to change the name of used environment variables in your <%= x %> application. [Learn more here][docs.using-qovery.configuration.environment-variable#alias-environment-variable].*

</Alert>

</li>

</ol>
</Steps>

<%= qovery_deploy_app() %>

Congratulations! Your environment with [<%= x %>][<%= x_url %>] application and [<%= y %>][<%= y_url %>] database should be in progress.

## Trigger a new deployment

Now, you can play with the sample <%= x %> application and commit & push your changes. Qovery detects your actions and triggers new builds and application deployments. Any change you make will be reflected in your deployed application automatically.

## Conclusion
Congratulations! Now, you know how to deploy your <%= x %> app with <%= y %> in just a few steps.

Do you have any feedback about this tutorial? Let us know what you think on [our forum][urls.qovery_forum], and join our wonderful dev community of +5500 devs.
