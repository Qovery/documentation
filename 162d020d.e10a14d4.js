/*! For license information please see 162d020d.e10a14d4.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{175:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(1),a=r(9),i=(r(0),r(479)),o=(r(487),r(478),r(483),{last_modified_on:"2025-09-23",title:"Observability architecture",description:"Architecture",sidebar_label:"Architecture",hide_pagination:!0}),c={id:"using-qovery/observability/architecture",title:"Observability architecture",description:"Architecture",source:"@site/docs/using-qovery/observability/architecture.md",permalink:"/docs/using-qovery/observability/architecture",sidebar_label:"Architecture",sidebar:"docs",previous:{title:"Observability overview",permalink:"/docs/using-qovery/observability"},next:{title:"Monitoring services",permalink:"/docs/using-qovery/observability/monitoring"}},s=[{value:"Data Collection",id:"data-collection",children:[]},{value:"Data Flow",id:"data-flow",children:[]},{value:"Key Features",id:"key-features",children:[]}],l={rightToc:s};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Qovery observability is powered by a combination of ",Object(i.b)("strong",{parentName:"p"},"open-source tools")," and the ",Object(i.b)("strong",{parentName:"p"},"Qovery platform"),"."),Object(i.b)("h2",{id:"data-collection"},"Data Collection"),Object(i.b)("p",null,"The observability stack uses specialized components to gather metrics, logs, and events from your Kubernetes infrastructure. By default, data is retained for 30 days."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Prometheus + Thanos \u2013 collect and store metrics (CPU, memory, network). Each cluster runs its own Prometheus instance with Thanos providing long-term storage in cloud object storage (S3/GCS)."),Object(i.b)("li",{parentName:"ul"},"Loki + Promtail \u2013 collect and store container logs. Promtail runs as a DaemonSet collecting logs from all containers, while Loki stores them with 12 weeks retention and advanced querying capabilities."),Object(i.b)("li",{parentName:"ul"},"Qovery Event Logger \u2013 captures Kubernetes events and enriches them as logs and metrics. A custom fork of the Kubernetes event logger pushes events to both Prometheus (for alerting) and Loki (for traceability).")),Object(i.b)("h2",{id:"data-flow"},"Data Flow"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/observability/architecture-light.png",alt:"Monitoring overview",className:"light-only"}),Object(i.b)("img",{src:"/img/observability/architecture-dark.png",alt:"Monitoring overview",className:"dark-only"})),Object(i.b)("p",null,"This pipeline ensures reliable collection, processing, and delivery of observability data from your clusters to the Qovery platform."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Prometheus scrapes metrics from Kubernetes and workloads every 30 seconds with automatic service discovery."),Object(i.b)("li",{parentName:"ul"},"Thanos provides persistence and long-term storage with intelligent data compaction and retention policies."),Object(i.b)("li",{parentName:"ul"},"Promtail collects logs from containers and forwards them to Loki with custom pipeline stages that normalize log levels and detect errors automatically."),Object(i.b)("li",{parentName:"ul"},"Qovery Cluster Agent exposes metrics and logs to the Qovery backend via secure gRPC, enriching data with Qovery-specific labels (service ID, environment ID)."),Object(i.b)("li",{parentName:"ul"},"The Qovery frontend queries this data and displays it in your dashboard using Recharts for time-series visualization, with React-Query handling caching and real-time updates.")),Object(i.b)("h2",{id:"key-features"},"Key Features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Per-cluster Architecture: Each cluster maintains its own observability stack for data isolation and performance."),Object(i.b)("li",{parentName:"ul"},"Custom Log Processing: Automatic error detection and classification with custom metrics (q_log_errors_total) for alerting."),Object(i.b)("li",{parentName:"ul"},"High Availability: Prometheus runs with 2 replicas, Thanos components auto-scale (2-5 replicas) based on load.")),Object(i.b)("p",null,"The Qovery platform implements an intelligent retention strategy that balances observability needs with storage costs. This multi-tiered approach ensures maximum granularity for recent debugging while preserving historical trends for long-term analysis."),Object(i.b)("p",null,"The system uses a progressive compaction approach: recent data is stored at native resolution to enable precise troubleshooting, then gradually aggregated over time to optimize storage space while preserving essential information for performance analysis and capacity planning."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Smart Retention:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Prometheus:")," 7 days local retention"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Thanos:")," ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Raw metrics (15 days): Original data collected at native frequency (scraping set to 30s)"),Object(i.b)("li",{parentName:"ul"},"5m resolution (30 days): Metrics aggregated in 5-minute blocks to reduce volume (used for short timerange)"),Object(i.b)("li",{parentName:"ul"},"1h resolution (30 days): Metrics aggregated in 1-hour blocks for optimized long-term storage (used for long timerange)"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Loki:")," 12 weeks log retention")))))}u.isMDXComponent=!0},477:function(e,t,r){var n;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)&&n.length){var o=a.apply(null,n);o&&e.push(o)}else if("object"===i)for(var c in n)r.call(n,c)&&n[c]&&e.push(c)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(n=function(){return a}.apply(t,[]))||(e.exports=n)}()},478:function(e,t,r){"use strict";r(480);var n=r(0),a=r.n(n),i=r(477),o=r.n(i);r(132);t.a=function(e){var t=e.children,r=e.classNames,n=e.fill,i=e.icon,c=e.type,s=null;switch(c){case"danger":s="alert-triangle";break;case"success":s="check-circle";break;case"warning":s="alert-triangle";break;default:s="info"}return a.a.createElement("div",{className:o()(r,"alert","alert--"+c,{"alert--fill":n,"alert--icon":!1!==i}),role:"alert"},!1!==i&&a.a.createElement("i",{className:o()("feather","icon-"+(i||s))}),t)}},479:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(r),p=n,d=b["".concat(o,".").concat(p)]||b[p]||m[p]||i;return r?a.a.createElement(d,c({ref:t},l,{components:r})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},480:function(e,t,r){var n=r(12);n(n.P,"Array",{fill:r(481)}),r(74)("fill")},481:function(e,t,r){"use strict";var n=r(27),a=r(75),i=r(26);e.exports=function(e){for(var t=n(this),r=i(t.length),o=arguments.length,c=a(o>1?arguments[1]:void 0,r),s=o>2?arguments[2]:void 0,l=void 0===s?r:a(s,r);l>c;)t[c++]=e;return t}},482:function(e,t,r){var n=r(28).f,a=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in a||r(10)&&n(a,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},483:function(e,t,r){"use strict";r(482);var n=r(0),a=r.n(n),i=r(478);t.a=function(e){var t=e.children,r=e.name;return a.a.createElement(i.a,{type:"info",fill:!0,icon:!1,rounded:!0,className:"list--icons list--icons--arrow list--tight list--indent margin-bottom--lg"},a.a.createElement("p",{class:"text--lg margin-bottom--sm",style:{marginTop:"-0.25em"}},"Before you begin, this ",r||"page"," assumes the following:"),t)}},484:function(e,t,r){"use strict";var n=r(1),a=r(0),i=r.n(a),o=r(39),c=r(488),s=r(20),l=r.n(s);t.a=function(e){var t,r=e.to,s=e.href,u=r||s,b=Object(c.a)(u),m=Object(a.useRef)(!1),p=l.a.canUseIntersectionObserver;return Object(a.useEffect)((function(){return!p&&b&&window.docusaurus.prefetch(u),function(){p&&t&&t.disconnect()}}),[u,p,b]),u&&b?i.a.createElement(o.b,Object(n.a)({},e,{onMouseEnter:function(){m.current||(window.docusaurus.preload(u),m.current=!0)},innerRef:function(e){var r,n;p&&e&&b&&(r=e,n=function(){window.docusaurus.prefetch(u)},(t=new window.IntersectionObserver((function(e){e.forEach((function(e){r===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(t.unobserve(r),t.disconnect(),n())}))}))).observe(r))},to:u})):i.a.createElement("a",Object(n.a)({},e,{href:u}))}},487:function(e,t,r){"use strict";var n=r(0),a=r.n(n),i=r(484),o=r(477),c=r.n(o);r(134);t.a=function(e){var t=e.children,r=e.className,n=e.badge,o=e.leftIcon,s=e.rightIcon,l=e.size,u=e.target,b=e.to,m=c()("jump-to","jump-to--"+l,r),p=a.a.createElement("div",{className:"jump-to--inner"},a.a.createElement("div",{className:"jump-to--inner-2"},o&&a.a.createElement("div",{className:"jump-to--left"},a.a.createElement("i",{className:"feather icon-"+o})),a.a.createElement("div",{className:"jump-to--main"},n?a.a.createElement("span",{className:"badge badge--primary badge--right"},n):"",t),a.a.createElement("div",{className:"jump-to--right"},a.a.createElement("i",{className:"feather icon-"+(s||"chevron-right")+" arrow"}))));return u?a.a.createElement("a",{href:b,target:u,className:m},p):a.a.createElement(i.a,{to:b,className:m},p)}},488:function(e,t,r){"use strict";function n(e){return!1===/^(https?:|\/\/)/.test(e)}r.d(t,"a",(function(){return n}))}}]);