/*! For license information please see 07c2f310.e29e21c3.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{163:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return u}));var n=a(1),r=a(9),i=(a(0),a(473)),l=a(472),b=a(480),o={last_modified_on:"2025-04-14",title:"Environment Variable & Secrets",description:"Learn how to configure Environment Variables and Secrets on Qovery"},c={id:"using-qovery/configuration/environment-variable",title:"Environment Variable & Secrets",description:"Learn how to configure Environment Variables and Secrets on Qovery",source:"@site/docs/using-qovery/configuration/environment-variable.md",permalink:"/docs/using-qovery/configuration/environment-variable",sidebar:"docs",previous:{title:"Lifecycle Job",permalink:"/docs/using-qovery/configuration/lifecycle-job"},next:{title:"Service Health Checks",permalink:"/docs/using-qovery/configuration/service-health-checks"}},p=[{value:"Environment types",id:"environment-types",children:[{value:"Environment Variable",id:"environment-variable",children:[]},{value:"Environment Variable as file",id:"environment-variable-as-file",children:[]}]},{value:"Scopes",id:"scopes",children:[]},{value:"Using variables at build time",id:"using-variables-at-build-time",children:[]},{value:"BUILT_IN variables",id:"built_in-variables",children:[]},{value:"Aliases and overrides",id:"aliases-and-overrides",children:[]},{value:"Variables Interpolation",id:"variables-interpolation",children:[]},{value:"Naming Rules",id:"naming-rules",children:[]},{value:"Create an Environment Variable",id:"create-an-environment-variable",children:[]},{value:"Delete an Environment Variable",id:"delete-an-environment-variable",children:[]},{value:"Update an Environment Variable",id:"update-an-environment-variable",children:[]},{value:"Override Environment Variable",id:"override-environment-variable",children:[]},{value:"Alias Environment Variable",id:"alias-environment-variable",children:[]},{value:"Import environment variables",id:"import-environment-variables",children:[{value:"Importation conflicts",id:"importation-conflicts",children:[]},{value:"Overwriting and limitations",id:"overwriting-and-limitations",children:[]}]},{value:"Service interconnection",id:"service-interconnection",children:[{value:"Connecting to a database",id:"connecting-to-a-database",children:[]},{value:"Connecting to another application",id:"connecting-to-another-application",children:[]}]}],s={rightToc:p};function u(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Qovery makes ",Object(i.b)("strong",{parentName:"p"},"Environment Variables")," available to your services at runtime, as well as during builds and deploys."),Object(i.b)("p",null,"If your projects and applications rely on sensitive data like credentials, API keys, certificates, Qovery offers you a way to store them as a ",Object(i.b)("strong",{parentName:"p"},"Secret"),". Secrets are special environment variable safely encrypted, and their values can not be retrieved via Qovery API - they are only accessible for your application during build and runtime."),Object(i.b)("p",null,"Qovery automatically generates for you some special environment variable (called BUILT_IN) which allows you to setup your service interconnection. See the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#built_in-variables"}),"BUILT_IN Section")," section."),Object(i.b)("h1",{id:"environment-variable-definition"},"Environment Variable definition"),Object(i.b)("p",null,"An environment variable is defined by:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A type: two types are supported today",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Variable"),": classic key/value pairs where the ",Object(i.b)("inlineCode",{parentName:"li"},"value")," can be retrieved at build and run time by using its ",Object(i.b)("inlineCode",{parentName:"li"},"name")," (key). Example: Key = ",Object(i.b)("inlineCode",{parentName:"li"},"THIRD_PARTY_URL"),", Value = ",Object(i.b)("inlineCode",{parentName:"li"},"https://mythirdparty.com")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Variable as File"),": key/value/path triplets where the ",Object(i.b)("inlineCode",{parentName:"li"},"value")," will be stored as a file on the specified ",Object(i.b)("inlineCode",{parentName:"li"},"path"),". Your application can then retrieve the ",Object(i.b)("inlineCode",{parentName:"li"},"path")," of the file at run\ntime by using the variable ",Object(i.b)("inlineCode",{parentName:"li"},"name")," (key). Only text files are supported. Example: Key = ",Object(i.b)("inlineCode",{parentName:"li"},"MY_CONFIG"),", Path = ",Object(i.b)("inlineCode",{parentName:"li"},"/tmp/config.json")," Value = ",Object(i.b)("inlineCode",{parentName:"li"},'{"key1":"value1","key2":"value2"}')))),Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("strong",{parentName:"li"},"scope"),": the accessibility level of this variable: application, environment, project (see ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#scopes"}),"scopes section")," below) "),Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("strong",{parentName:"li"},"secret flag"),": it determines if the variable value needs to be encrypted and should be accessed ONLY by your applications (no access via the API/UI)")),Object(i.b)("h2",{id:"environment-types"},"Environment types"),Object(i.b)("p",null,"Depending on your use case, you might decide to use a simple key value environment variable or instead use the environment variable as a file."),Object(i.b)("h3",{id:"environment-variable"},"Environment Variable"),Object(i.b)("p",null,"If you need to store a simple value that needs to be retrieved at build or run time, than you can use a key/value environment variable"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),":\nYou have a 3rd party application running on the endpoint ",Object(i.b)("inlineCode",{parentName:"p"},"https://mythirdparty.com"),". You can create an environment variable called ",Object(i.b)("inlineCode",{parentName:"p"},"THIRD_PARTY_URL")," that will contain the 3rd party URL:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/env_key_value.png",alt:"Variable"})),Object(i.b)("p",null,"Your application will then be able to retrieve the url by getting the value of the environment variable ",Object(i.b)("inlineCode",{parentName:"p"},"THIRD_PARTY_URL"),"."),Object(i.b)("h3",{id:"environment-variable-as-file"},"Environment Variable as file"),Object(i.b)("p",null,"If your application needs to load configuration files at run time, than you can use the environment variable as file."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),":\nGrafana allows you to override the default configuration by setting a few environment variables pointing to your own configuration files. By default, the variable ",Object(i.b)("inlineCode",{parentName:"p"},"GF_PATHS_CONFIG")," points to '/etc/grafana/grafana.ini' but in case you want to specify a different configuration, you can create an environment variable as file like this:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/env_file.png",alt:"Variable as file"})),Object(i.b)("p",null,"When the grafana container will load the env var ",Object(i.b)("inlineCode",{parentName:"p"},"GF_PATHS_CONFIG"),", it will retrieve the path where the configuration file is stored and load its content."),Object(i.b)("h2",{id:"scopes"},"Scopes"),Object(i.b)("p",null,"The scope of a variable allows you to define at which level this environment variable can be accessed (e.g. : only by one specific service). "),Object(i.b)("p",null,"There are three scopes for the Environment Variables:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scope"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Level"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"PROJECT")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Variables at the project level are shared across all environments and all applications of the project")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"ENVIRONMENT")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Variables at the environment level are shared across all applications of the project in one, given environment")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"APPLICATION")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Variables available for one application in one environment")))),Object(i.b)("h2",{id:"using-variables-at-build-time"},"Using variables at build time"),Object(i.b)("p",null,"To use the environment variables at build time, you just simply need to declare the variables as ",Object(i.b)("inlineCode",{parentName:"p"},"ARGS")," in your Dockerfile. Qovery will automatically detect any environment variable declared as ARGS and inject it in the build command via the parameter ",Object(i.b)("inlineCode",{parentName:"p"},"--build-arg")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),":"),Object(i.b)("p",null,"You need to access the variables ",Object(i.b)("inlineCode",{parentName:"p"},"SMB_PASS")," and ",Object(i.b)("inlineCode",{parentName:"p"},"SMB_USER")," at build time."),Object(i.b)("p",null,"In this case, you have to:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Declare those variables within the Qovery interface"),Object(i.b)("li",{parentName:"ul"},"Make sure they are declared as ",Object(i.b)("inlineCode",{parentName:"li"},"ARGS")," within your Dockerfile")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"FROM ubuntu:16.04\nARG SMB_PASS\nARG SMB_USER\n...\n")),Object(i.b)("h2",{id:"built_in-variables"},"BUILT_IN variables"),Object(i.b)("p",null,"Qovery automatically generates some variables (called BUILT_IN) which allow you to easily configure your service interconnection or to access some of the environment/application information."),Object(i.b)("p",null,"By default, every environment contains the following BUILT_IN variables:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_PROJECT_ID")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current project ID")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_ENVIRONMENT_ID")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current environment ID")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_APPLICATION_ID")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current service ID (for application with source = git repository)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_CONTAINER_ID")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current service ID (for application with source = container registry)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_JOB_ID")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current service ID (for lifecycle job and cronjob)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_CLOUD_PROVIDER_REGION")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Cloud provider region of the Kubernetes cluster running this environment")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_KUBERNETES_NAMESPACE_NAME")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Namespace used in Kubernetes to run the application of this environment")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"QOVERY_KUBERNETES_CLUSTER_NAME")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of the Kubernetes cluster running this environment")))),Object(i.b)("p",null,"For any service within your environment (database, application, job), your application get access to a set of BUILT_IN variables. These can be used, to configure the interconnection between your services."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Naming Convention"),":"),Object(i.b)("p",null,"We use the following naming convention for additional built-in variables:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"QOVERY_<SERVICE_TYPE>_<SERVICE_ID>_<SPEC>\n")),Object(i.b)("p",null,"For more information on how to use the BUILT_IN environment variables to:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"connect to a database, have a look at ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#connecting-to-a-database"}),"this section"),"."),Object(i.b)("li",{parentName:"ul"},"connect to another service, have a look at ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#connecting-to-another-application"}),"this section"),".")),Object(i.b)("h2",{id:"aliases-and-overrides"},"Aliases and overrides"),Object(i.b)("p",null,"For a given environment variable, you can create aliases and overrides:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Alias: it defines an alias for the environment variable. You can access its value by its original name or by its alias name. "),Object(i.b)("li",{parentName:"ul"},"Override: it overrides the value of the environment variable. Example: you have an environment variable with scope = project having a particular value but you want to define a special value only for one environment. Instead of creating a separate environment variable only for that project, you can create an override of that variable within the environment requiring the special value.")),Object(i.b)("h2",{id:"variables-interpolation"},"Variables Interpolation"),Object(i.b)("p",null,"You can define an environment variable as a composition of text and other environment variables value (environment variables interpolation).\nFor example, you can define your APP_URL environment variable as a composition of your HOST_URL and HOST_PORT in this way:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Name = APP_URL"),Object(i.b)("li",{parentName:"ul"},"Value = ",Object(i.b)("inlineCode",{parentName:"li"},"https://{{HOST_URL}}:{{HOST_PORT}}"))),Object(i.b)("p",null,"Important information on this feature:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"the pattern used is ",Object(i.b)("inlineCode",{parentName:"li"},"{{VAR_NAME}}")),Object(i.b)("li",{parentName:"ul"},"if a referenced variable doesn't exist, it is replaced by an empty string"),Object(i.b)("li",{parentName:"ul"},"composition coherency using built in variables is kept when cloning an environment. Example: you can create a variable APP_URL = ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://%7B%7BQOVERY_APPLICATION_ZEC0A2975_HOST_INTERNAL%7D%7D"}),"https://{{QOVERY_APPLICATION_ZEC0A2975_HOST_INTERNAL}}"),' and when the environment is cloned, the "ZEC0A2975" is replaced with the right ID.'),Object(i.b)("li",{parentName:"ul"},"there is no check at creation / edition / deletion if the referenced variable doesn't exist"),Object(i.b)("li",{parentName:"ul"},'"inner replacements" are not supported (e.g VAR_1 = {{VAR_2}} and VAR_2={{VAR_3}} )')),Object(i.b)("p",null,"You can easily insert existing variables by clicking on the magic wand icon and selecting your desired variables:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/var_insert_magic_wand.png",alt:"Variables"})),Object(i.b)("h2",{id:"naming-rules"},"Naming Rules"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Environment variable name should use only alphanumeric characters and the underscore character (_) to ensure they are accessible from all programming languages. Environment variable keys should not include the hyphen character."),Object(i.b)("li",{parentName:"ul"},"Environment variable name should not begin with a double underscore (__)."),Object(i.b)("li",{parentName:"ul"},"An environment variable\u2019s name should not begin with QOVERY_ unless it is set by the Qovery platform itself.")),Object(i.b)("h1",{id:"managing-the-environment-variables"},"Managing the environment variables"),Object(i.b)("h2",{id:"create-an-environment-variable"},"Create an Environment Variable"),Object(i.b)(l.a,{type:"info",mdxType:"Alert"},Object(i.b)("p",null,"Do you want to bulk import your Environment Variables or Secrets? ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/guides/tutorial/import-your-environment-variables-with-the-qovery-cli/"}),"Check out this tutorial"))),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"Navigate to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://console.qovery.com"}),"Console"))),Object(i.b)("li",null,Object(i.b)("p",null,"Select your project, environment and application.")),Object(i.b)("li",null,Object(i.b)("p",null,"Select ",Object(i.b)("inlineCode",{parentName:"p"},"Variables")," tab in the left panel and click ",Object(i.b)("inlineCode",{parentName:"p"},"New Variable")," button. Select if you want to create a classic environment variable or an environment variable as file."),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/var_creation_1.png",alt:"Variables"})),Object(i.b)(l.a,{type:"info",mdxType:"Alert"},Object(i.b)("p",null,'The "Variables tab" is available on the Environment list and Service list screens as well but it will let you manage only the environment variables with Scope = Project or Environment.'))),Object(i.b)("li",null,Object(i.b)("p",null,"Select the name, value and scope of your new environment variable"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/var_creation_2.png",alt:"Variables"})),Object(i.b)("p",null,"If the variable you are trying to create is a Variable as File, define the ",Object(i.b)("inlineCode",{parentName:"p"},"Path")," where the file should be stored. Remember that in this case the ",Object(i.b)("inlineCode",{parentName:"p"},"Value")," field should contain the content of your file.\nIf the variable you are trying to create is a Secret, select the ",Object(i.b)("inlineCode",{parentName:"p"},"Secret")," checkbox.")))),Object(i.b)("h2",{id:"delete-an-environment-variable"},"Delete an Environment Variable"),Object(i.b)(l.a,{type:"info",mdxType:"Alert"},Object(i.b)("p",null,"You can bulk delete a set of environment variables by selecting them via the checkbox next to their name")),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"Navigate to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://console.qovery.com"}),"Console"))),Object(i.b)("li",null,Object(i.b)("p",null,"Select your project, environment and application")),Object(i.b)("li",null,Object(i.b)("p",null,"Select the ",Object(i.b)("inlineCode",{parentName:"p"},"Environment Variables")," tab in the left panel")),Object(i.b)("li",null,Object(i.b)("p",null,"Select variable you want to delete and click the ",Object(i.b)("inlineCode",{parentName:"p"},"Delete")," button from the submenu:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/var_delete.png",alt:"Delete Variables"}))))),Object(i.b)("h2",{id:"update-an-environment-variable"},"Update an Environment Variable"),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"Navigate to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://console.qovery.com"}),"Console"))),Object(i.b)("li",null,Object(i.b)("p",null,"Select your project, environment and application")),Object(i.b)("li",null,Object(i.b)("p",null,"Select the ",Object(i.b)("inlineCode",{parentName:"p"},"Environment Variables")," tab in the left panel")),Object(i.b)("li",null,Object(i.b)("p",null,"Select variable you want to update and click the ",Object(i.b)("inlineCode",{parentName:"p"},"Edit")," button from the submenu:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/var_edit.png",alt:"Update Variables"}))),Object(i.b)("li",null,Object(i.b)("p",null,"Update the variable in the popup window"),Object(i.b)("p",null,"Note: if the variable is a Secret, you won't be able to see its value")))),Object(i.b)("h2",{id:"override-environment-variable"},"Override Environment Variable"),Object(i.b)("p",null,"If you want to override a value of an environment variable, follow those steps:"),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"Navigate to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://console.qovery.com"}),"Console"))),Object(i.b)("li",null,Object(i.b)("p",null,"Select your project, environment and application")),Object(i.b)("li",null,Object(i.b)("p",null,"Select the ",Object(i.b)("inlineCode",{parentName:"p"},"Environment Variables")," tab in the left panel")),Object(i.b)("li",null,Object(i.b)("p",null,"Select variable you want to override and click the ",Object(i.b)("inlineCode",{parentName:"p"},"Override")," button from the submenu")),Object(i.b)("li",null,Object(i.b)("p",null,"Select the override the variable and its scope in the popup window")))),"\\",Object(i.b)(l.a,{type:"warning",mdxType:"Alert"},Object(i.b)("p",null,"You can only override environment variables of a higher scope, e.g. ",Object(i.b)("strong",{parentName:"p"},"Environment")," scope variable can override ",Object(i.b)("strong",{parentName:"p"},"Project")," variable, but can't override ",Object(i.b)("strong",{parentName:"p"},"Application")," variable.")),Object(i.b)("h2",{id:"alias-environment-variable"},"Alias Environment Variable"),Object(i.b)("p",null,"You can create an alias for the existing environment variable."),Object(i.b)("p",null,"Let's suppose that your application requires a ",Object(i.b)("inlineCode",{parentName:"p"},"DATABASE_URL")," variable. Qovery provides your application with the ",Object(i.b)("inlineCode",{parentName:"p"},"QOVERY_DATABASE_MY_POSTGRESQL_3498225_URL")," variable with a database password.\nInstead of copy-pasting its value, you can create an alias to ",Object(i.b)("inlineCode",{parentName:"p"},"QOVERY_DATABASE_MY_POSTGRESQL_3498225_URL"),"."),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"Navigate to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://console.qovery.com"}),"Console"))),Object(i.b)("li",null,Object(i.b)("p",null,"Select your project, environment and application")),Object(i.b)("li",null,Object(i.b)("p",null,"Select the ",Object(i.b)("inlineCode",{parentName:"p"},"Environment Variables")," tab in the left panel")),Object(i.b)("li",null,Object(i.b)("p",null,"Select variable you want to alias and click the ",Object(i.b)("inlineCode",{parentName:"p"},"Alias")," button from the submenu:")),Object(i.b)("li",null,Object(i.b)("p",null,"Define the alias of the variable and its scope in the popup window")))),Object(i.b)("h2",{id:"import-environment-variables"},"Import environment variables"),Object(i.b)("p",null,"You can add a set of environment variables into Qovery by importing an ",Object(i.b)("inlineCode",{parentName:"p"},".env")," file.  The ",Object(i.b)("inlineCode",{parentName:"p"},".env")," file contains a list of your environment variables, in a ",Object(i.b)("inlineCode",{parentName:"p"},"MY_KEY = VALUE")," format."),Object(i.b)("p",null,"To import environment variables into your Qovery environment, follow the steps below."),Object(i.b)(b.a,{headingDepth:3,mdxType:"Steps"},Object(i.b)("ol",null,Object(i.b)("li",null,Object(i.b)("p",null,"On an application page, click on the ",Object(i.b)("inlineCode",{parentName:"p"},"Environment variable")," tabs > ",Object(i.b)("inlineCode",{parentName:"p"},"Import")," button."),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/import_1.png",alt:"Import button"}))),Object(i.b)("li",null,Object(i.b)("p",null,"Drag & Drop the ",Object(i.b)("inlineCode",{parentName:"p"},".env")," file into the modal, or click on the interface to open the file explorer.")),Object(i.b)("li",null,Object(i.b)("p",null,"The file is loaded and a new modal is displayed, where you can configure the import of your variables."),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/import_2.png",alt:"Import configuration"})),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Overwrites variables")),Object(i.b)("p",null,"When this option is enabled, if an existing variable and an imported variable share the same name, the existing value will be overwritten by the imported one.\nIf the option is disabled, the imported value will be ignored.\nHowever, to avoid conflicts in the architecture of your environment variables, some of them will intentionally not be imported.\nTo understand how we handle conflicts, please take a look to the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#importation-conflicts"}),"Importation conflicts")," section."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Configure variables import")),Object(i.b)("p",null,"On this modal, you can define for each variable the following parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"name"),": upate variable name"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Value"),": update variable value"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Scope"),": Specify the scope in which you want to import the variable"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Secret"),": Specify if this value is considered as a secret or not")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Preset variables")),Object(i.b)("p",null,"To help you import a large number of variables quickly, you can predefine scope and secret settings.\nThis will change the scope and secret value of all listed variables.\nIf the secret and scope of one or more specific variables are subsequently updated, this will not change the predefined setting.")),Object(i.b)("li",null,Object(i.b)("p",null,"When you have finished the configuration, click on the ",Object(i.b)("inlineCode",{parentName:"p"},"Import")," button.")),Object(i.b)("li",null,Object(i.b)("p",null,"A pop-up message is displayed to inform you that your environment variables have been imported.")))),Object(i.b)("h3",{id:"importation-conflicts"},"Importation conflicts"),Object(i.b)("p",null,"To avoid conflicts between already existing and imported environment variables, some of them will not be imported, even if the overwrite option is activated.\nThe different cases are described below."),Object(i.b)("h4",{id:"imported-variable-has-same-name-as-built_in-variable"},"Imported variable has same name as BUILT_IN variable"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scope"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Existing variables ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"42"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Built_in")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Variables to import ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Application")))),Object(i.b)("p",null,"Built_in environment variables are generated and managed by Qovery and will not be overwritten, even if the ",Object(i.b)("inlineCode",{parentName:"p"},"overwriting")," option is activated."),Object(i.b)("h4",{id:"imported-variable-has-same-name-as-an-existing-alias"},"Imported variable has same name as an existing ALIAS"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scope"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Existing variables ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"42"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Environment")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ALIAS"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR_ALIAS"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Application")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Variables to import ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR_ALIAS"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Application")))),Object(i.b)("p",null,"The value cannot be rewritten because the link between the original variable and the alias would be lost."),Object(i.b)("h4",{id:"imported-variable-has-same-name-as-an-existing-secret-or-vice-versa"},"Imported variable has same name as an existing secret (or vice versa)"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Scope"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Secret"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Existing variables ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Application"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Ye")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"}," Variables to import ")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"VALUE"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MY_VAR"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Application"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"No")))),Object(i.b)("p",null,"The value cannot be imported because this will overwrite the existing secret."),Object(i.b)("h3",{id:"overwriting-and-limitations"},"Overwriting and limitations"),Object(i.b)("p",null,"Some overwriting cases are not supported for now. They are summarized in the following table."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Existing variable scope"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Imported variable scope"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Supported"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROJECT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROJECT / ENVIRONMENT / APPLICATION"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"YES")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ENVIRONMENT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROJECT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NO")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ENVIRONMENT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ENVIRONMENT / APPLICATION"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"YES")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"APPLICATION"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROJECT / ENVIRONMENT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"NO")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"APPLICATION"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"APPLICATION"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"YES")))),Object(i.b)("h2",{id:"service-interconnection"},"Service interconnection"),Object(i.b)("h3",{id:"connecting-to-a-database"},"Connecting to a database"),Object(i.b)("p",null,"To access a database managed by Qovery from your application, you can use the BUILT_IN environment variables and secrets that have been automatically created by Qovery during the database creation process. You can find all the BUILT_IN variables on the Qovery console within the Environment Variable section of your application (",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/database/#credentials-and-connectivity"}),"see the credentials and connectivity section for the full list"),")."),Object(i.b)("p",null,"In order to match the naming convention of the database connection variables used within your code, you can ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/environment-variable/#alias-environment-variable"}),"create an alias")," for each variable in the Qovery console so that you don't need to change your code."),Object(i.b)("p",null,"Once you have defined an alias for each variable, you can redeploy the application and check that it has finally access to the database."),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("p",null,"You have created a postgres database on the Qovery console. Within the code of your application you need some environment variables containing the connection parameters of the database: DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD, DATABASE_PORT, DATABASE_NAME"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python",metastring:'title="example.py"',title:'"example.py"'}),'DB_NAME = os.getenv("DATABASE_NAME", "nemo")\nDB_USER = os.getenv("DATABASE_USER", "nemo")\nDB_PASSWORD = os.getenv("DATABASE_PASSWORD", "password")\nDB_HOST = os.getenv("DATABASE_HOST", "localhost")\nDB_PORT = os.getenv("DATABASE_PORT", "5432")\n')),Object(i.b)("p",null,"To match your internal naming convention, you can create aliases for each of the corresponding variables in this way:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/database_alias.png",alt:"Env Var Aliases"})),Object(i.b)("h3",{id:"connecting-to-another-application"},"Connecting to another application"),Object(i.b)("p",null,"To access another application managed by Qovery, you can use the BUILT_IN environment variables that have been automatically created by Qovery during the creation of that particular application. You can find all the BUILT_IN variables on the Qovery console within the Environment Variable section of your application."),Object(i.b)("p",null,"Please note that two BUILT_IN might exist:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"QOVERY_APPLICATION_<APPID>_HOST_INTERNAL")," : it contains the INTERNAL host of the application that can be used inside your Kubernetes cluster (and thus by any application running on it)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"QOVERY_APPLICATION_<APPID>_HOST_EXTERNAL")," : it contains the EXTERNAL host of the application that can be used to reach your application from outside your Kubernetes cluster (if the application is publicly exposing one of its ports)")),Object(i.b)("p",null,"In order to match the naming convention of the connection variables used within your code, you can ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/using-qovery/configuration/environment-variable/#alias-environment-variable"}),"create an alias")," for the HOST_INTERNAL variable so that you don't need to change your code."),Object(i.b)("p",null,"Once you have defined an alias for each variable, you can redeploy the application and check that it can reach the other application."),Object(i.b)("h4",{id:"example-1"},"Example"),Object(i.b)("p",null,"You have created a backend application on the Qovery console and a BUILD_IN variable has been created containing the application HOST called ",Object(i.b)("inlineCode",{parentName:"p"},"QOVERY_APPLICATION_Z9D8DAA08_HOST_INTERNAL"),". Within the code of your front-end application you need some environment variables containing the host of the backend application (BACKEND_HOST)"),Object(i.b)("p",null,"To match your internal naming convention, you can create alias for the corresponding variable in this way:"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:"/img/configuration/variables/host_alias.png",alt:"Env Var Aliases"})))}u.isMDXComponent=!0},471:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)&&n.length){var l=r.apply(null,n);l&&e.push(l)}else if("object"===i)for(var b in n)a.call(n,b)&&n[b]&&e.push(b)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},472:function(e,t,a){"use strict";a(474);var n=a(0),r=a.n(n),i=a(471),l=a.n(i);a(132);t.a=function(e){var t=e.children,a=e.classNames,n=e.fill,i=e.icon,b=e.type,o=null;switch(b){case"danger":o="alert-triangle";break;case"success":o="check-circle";break;case"warning":o="alert-triangle";break;default:o="info"}return r.a.createElement("div",{className:l()(a,"alert","alert--"+b,{"alert--fill":n,"alert--icon":!1!==i}),role:"alert"},!1!==i&&r.a.createElement("i",{className:l()("feather","icon-"+(i||o))}),t)}},473:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):b({},t,{},e)),a},s=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(a),O=n,m=s["".concat(l,".").concat(O)]||s[O]||u[O]||i;return a?r.a.createElement(m,b({ref:t},c,{components:a})):r.a.createElement(m,b({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=O;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var c=2;c<i;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},474:function(e,t,a){var n=a(12);n(n.P,"Array",{fill:a(475)}),a(74)("fill")},475:function(e,t,a){"use strict";var n=a(27),r=a(75),i=a(26);e.exports=function(e){for(var t=n(this),a=i(t.length),l=arguments.length,b=r(l>1?arguments[1]:void 0,a),o=l>2?arguments[2]:void 0,c=void 0===o?a:r(o,a);c>b;)t[b++]=e;return t}},479:function(e,t,a){"use strict";var n=a(483),r=a(51);function i(e,t){return t.encode?t.strict?n(e):encodeURIComponent(e):e}t.extract=function(e){return e.split("?")[1]||""},t.parse=function(e,t){var a=function(e){var t;switch(e.arrayFormat){case"index":return function(e,a,n){t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),t?(void 0===n[e]&&(n[e]={}),n[e][t[1]]=a):n[e]=a};case"bracket":return function(e,a,n){t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),t?void 0!==n[e]?n[e]=[].concat(n[e],a):n[e]=[a]:n[e]=a};default:return function(e,t,a){void 0!==a[e]?a[e]=[].concat(a[e],t):a[e]=t}}}(t=r({arrayFormat:"none"},t)),n=Object.create(null);return"string"!=typeof e?n:(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=t.shift(),i=t.length>0?t.join("="):void 0;i=void 0===i?null:decodeURIComponent(i),a(decodeURIComponent(r),i,n)})),Object.keys(n).sort().reduce((function(e,t){var a=n[t];return Boolean(a)&&"object"==typeof a&&!Array.isArray(a)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort((function(e,t){return Number(e)-Number(t)})).map((function(e){return t[e]})):t}(a):e[t]=a,e}),Object.create(null))):n},t.stringify=function(e,t){var a=function(e){switch(e.arrayFormat){case"index":return function(t,a,n){return null===a?[i(t,e),"[",n,"]"].join(""):[i(t,e),"[",i(n,e),"]=",i(a,e)].join("")};case"bracket":return function(t,a){return null===a?i(t,e):[i(t,e),"[]=",i(a,e)].join("")};default:return function(t,a){return null===a?i(t,e):[i(t,e),"=",i(a,e)].join("")}}}(t=r({encode:!0,strict:!0,arrayFormat:"none"},t));return e?Object.keys(e).sort().map((function(n){var r=e[n];if(void 0===r)return"";if(null===r)return i(n,t);if(Array.isArray(r)){var l=[];return r.slice().forEach((function(e){void 0!==e&&l.push(a(n,e,l.length))})),l.join("&")}return i(n,t)+"="+i(r,t)})).filter((function(e){return e.length>0})).join("&"):""}},480:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=(a(471),a(479)),l=a.n(i);a(133);t.a=function(e){var t=e.children,a=e.headingDepth,i=e.hideFeedbackQuestion,b="undefined"!=typeof window?window.location:null,o={title:"Tutorial on "+b+" failed",body:"The tutorial on:\n\n"+b+"\n\nHere's what went wrong:\n\n\x3c!-- Insert command output and details. Thank you for reporting! :) --\x3e"},c="https://github.com/qovery/documentation/issues/new?"+l.a.stringify(o),p=Object(n.useState)(null),s=p[0],u=p[1];return r.a.createElement("div",{className:"steps steps--h"+a},t,!i&&!s&&r.a.createElement("div",{className:"steps--feedback"},"How was it? Did this tutorial work?\xa0\xa0",r.a.createElement("span",{className:"button button--sm button--primary",onClick:function(){return u("yes")}},"Yes"),"\xa0\xa0",r.a.createElement("a",{href:c,target:"_blank",className:"button button--sm button--primary"},"No")),"yes"==s&&r.a.createElement("div",{className:"steps--feedback steps--feedback--success"},"Thanks! If you're enjoying Qovery please consider ",r.a.createElement("a",{href:"https://github.com/qovery/documentation/",target:"_blank"},"starring our Github repo"),"."))}},483:function(e,t,a){"use strict";e.exports=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}}}]);