(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{223:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return m}));var a=n(1),r=n(9),l=(n(0),n(444)),o=n(456),s=n(461),c=(n(451),n(443)),b={last_modified_on:"2024-01-11",title:"Configuration",description:"Configure Qovery BYOK on your Kubernetes cluster"},i={id:"getting-started/install-qovery/kubernetes/byok-config",title:"Configuration",description:"Configure Qovery BYOK on your Kubernetes cluster",source:"@site/docs/getting-started/install-qovery/kubernetes/byok-config.md",permalink:"/docs/getting-started/install-qovery/kubernetes/byok-config",sidebar:"docs",previous:{title:"Create Demo Cluster",permalink:"/docs/getting-started/install-qovery/kubernetes/create-k8s-cluster"},next:{title:"FAQ",permalink:"/docs/getting-started/install-qovery/kubernetes/faq"}},u=[{value:"Components",id:"components",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Qovery",id:"qovery",children:[]},{value:"Ingress",id:"ingress",children:[]},{value:"DNS",id:"dns",children:[]},{value:"Logging",id:"logging",children:[]},{value:"Certificates",id:"certificates",children:[]}]},{value:"Observability",id:"observability",children:[{value:"Metrics Server",id:"metrics-server",children:[]}]}],d={rightToc:u};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Qovery BYOK is a set of Kubernetes components that you can configure to fit your needs. It is used to connect your Kubernetes cluster to Qovery control plane."),Object(l.b)("h2",{id:"components"},"Components"),Object(l.b)("p",{align:"center"},Object(l.b)("img",{src:"/img/qovery_byok_how_it_works.jpg",alt:"How Qovery works with Self Managed Kubernetes cluster"})),Object(l.b)("p",null,"They are two types of components:"),Object(l.b)("p",null,"Qovery components:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Qovery Control Plane: the Qovery Control Plane is the brain of Qovery. It is responsible for managing your applications and providing the API to interact with Qovery."),Object(l.b)("li",{parentName:"ul"},"Qovery Cluster Agent (mandatory): the Qovery Cluster Agent is responsible for securely forwarding logs and metrics from your Kubernetes cluster to Qovery control plane."),Object(l.b)("li",{parentName:"ul"},"Qovery Shell Agent (mandatory): the Qovery Shell Agent is responsible for giving you a secure remote shell access to your Kubernetes pods if you need it. E.g. when using ",Object(l.b)("inlineCode",{parentName:"li"},"qovery shell")," command."),Object(l.b)("li",{parentName:"ul"},"Qovery Engine (optional): the Qovery Engine is responsible for managing your applications deployment on your Kubernetes cluster. It can be used Qovery side or is installed on your Kubernetes cluster.")),Object(l.b)("p",null,"Third-party components:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"NGINX Ingress Controller (optional)"),Object(l.b)("li",{parentName:"ul"},"External DNS (optional)"),Object(l.b)("li",{parentName:"ul"},"Loki (optional)"),Object(l.b)("li",{parentName:"ul"},"Promtail (optional)"),Object(l.b)("li",{parentName:"ul"},"Cert Manager (optional)"),Object(l.b)("li",{parentName:"ul"},"...")),Object(l.b)("p",null,"You can choose what you want to install and manage, and you will have a description of what services are used, and responsible for. You can disable them if you don't want to use them. And you can even install other components if you want to."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)("h3",{id:"qovery"},"Qovery"),Object(l.b)("p",null,"This is the configuration of Qovery itself. It is used by all Qovery components."),Object(l.b)(c.a,{type:"danger",mdxType:"Alert"},Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Do not share the jwtToken! Keep it in a safe place.")," It is used to authenticate the cluster.")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Key"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Required"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.clusterId")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The cluster ID. It is used to identify your cluster."),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.shortClusterId")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The short cluster ID. It is used to identify your cluster."),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.organizationId")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The organization ID. It is used to identify your organization."),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.jwtToken")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The JWT token. It is used to authenticate your cluster."),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.domain")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The domain name used by Qovery."),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.qoveryDnsUrl")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Qovery DNS url in case you want to use Qovery provided DNS"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.lokiUrl")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Local Loki URL (required if Loki is set)"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.promtailLokiUrl")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Promtail Loki URL (required if Promtail and Loki are set)"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.acmeEmailAddr")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Email address used for ",Object(l.b)("inlineCode",{parentName:"td"},"Let's Encrypt")," TLS requests"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.externalDnsPrefix")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ExernalDNS TXT record prefix (required if ExternalDNS is set)"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"set-by-customer"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"qovery.architectures")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Set cluster architectures (comma separated)"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"AMD64"))))),Object(l.b)("h4",{id:"qovery-cluster-agent"},"Qovery Cluster Agent"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The cluster agent is responsible for securely forwarding logs and metrics from your Kubernetes cluster to Qovery control plane")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The cluster will not report to Qovery control plane Kubernetes information, so the Qovery console will report unknown satus values")))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"qovery-cluster-agent:\n  fullnameOverride: qovery-cluster-agent\n")),Object(l.b)("h4",{id:"qovery-shell-agent"},"Qovery Shell Agent"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Used to give a remote shell access to you Kubernetes pods (if user is allowed from Qovery RBAC) with the Qovery CLI")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No remote connection will be possible, and Qovery support will not be able to help you to diagnose issues")))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"qovery-shell-agent:\n  fullnameOverride: qovery-shell-agent\n")),Object(l.b)("h3",{id:"ingress"},"Ingress"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but strongly recommended)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Web services can be privately or publicly exposed")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No web services will be exposed")))),Object(l.b)("p",null,"Qovery us will be exposed ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.nginx.com/nginx-ingress-controller/"}),"NGINX Ingress Controller")," by default to route traffic to your applications."),Object(l.b)("h4",{id:"nginx-ingress-controller"},"Nginx Ingress Controller"),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"demo",placeholder:"Select a platform",select:!1,size:null,values:[{group:"NginxIngress",label:"Demo",value:"demo"},{group:"NginxIngress",label:"AWS",value:"aws"},{group:"NginxIngress",label:"GCP",value:"gcp"},{group:"NginxIngress",label:"Scaleway",value:"scaleway"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"demo",mdxType:"TabItem"},Object(l.b)("p",null,"Here is the minimum override configuration to be used:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'ingress-nginx:\n  fullnameOverride: ingress-nginx\n  controller:\n    useComponentLabel: true\n    admissionWebhooks:\n      enabled: false\n    # Ingress class used when an application/container with public access is set\n    ingressClass: nginx-qovery\n    extraArgs:\n      # Default TLS certificate name and path\n      default-ssl-certificate: "qovery/letsencrypt-acme-qovery-cert"\n    # Allows customization of the source of the IP address or FQDN to report in the ingress status field\n    publishService:\n      enabled: true\n'))),Object(l.b)(s.a,{value:"aws",mdxType:"TabItem"},Object(l.b)("p",null,"Here is an example with Nginx Ingress Controller on AWS with NLB:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'ingress-nginx:\n  controller:\n    useComponentLabel: true\n    admissionWebhooks:\n      enabled: set-by-customer\n    # enable if you want metrics scrapped by prometheus\n    metrics:\n      enabled: set-by-customer\n      serviceMonitor:\n        enabled: set-by-customer\n    config:\n      # set global default file size limit to 100m\n      proxy-body-size: 100m\n      # hide Nginx version\n      server-tokens: "false"\n    # the Ingress Class name to be used by Ingresses (use "nginx-qovery" for Qovery application/container deployments)\n    ingressClass: nginx-qovery\n    extraArgs:\n      # Kubernetes path of the default Cert-manager TLS certificate (if used)\n      default-ssl-certificate: "cert-manager/letsencrypt-acme-qovery-cert"\n    updateStrategy:\n      rollingUpdate:\n        # set the minimum acceptable number of unavailable pods during a rolling update\n        maxUnavailable: 1\n    # enable auoscaling if you want to scale the number of replicas based on CPU usage\n    autoscaling:\n      enabled: true\n      minReplicas: set-by-customer\n      maxReplicas: set-by-customer\n      targetCPUUtilizationPercentage: set-by-customer\n    # required if you rely on a load balancer\n    # the controller mirrors the address of this service\'s endpoints to the load-balancer status of all Ingress objects it satisfies.\n    publishService:\n      enabled: true\n    # set a load balancer if you want your Nginx to be publicly accessible\n    service:\n      enabled: true\n      annotations:\n        service.beta.kubernetes.io/aws-load-balancer-type: nlb\n        # Qovery managed DNS requieres *.$domain (something like: *.<cluster_id>.<given_dns_name>)\n        external-dns.alpha.kubernetes.io/hostname: "set-by-customer"\n      externalTrafficPolicy: "Local"\n      sessionAffinity: ""\n      healthCheckNodePort: 0\n'))),Object(l.b)(s.a,{value:"gcp",mdxType:"TabItem"},Object(l.b)("p",null,"Here is an example with Nginx Ingress Controller on AWS with NLB:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'ingress-nginx:\n  controller:\n    useComponentLabel: true\n    admissionWebhooks:\n      enabled: set-by-customer\n    # enable if you want metrics scrapped by prometheus\n    metrics:\n      enabled: set-by-customer\n      serviceMonitor:\n        enabled: set-by-customer\n    config:\n      # set global default file size limit to 100m\n      proxy-body-size: 100m\n      # hide Nginx version\n      server-tokens: "false"\n    # the Ingress Class name to be used by Ingresses (use "nginx-qovery" for Qovery application/container deployments)\n    ingressClass: nginx-qovery\n    extraArgs:\n      # Kubernetes path of the default Cert-manager TLS certificate (if used)\n      default-ssl-certificate: "qovery/letsencrypt-acme-qovery-cert"\n    updateStrategy:\n      rollingUpdate:\n        # set the minimum acceptable number of unavailable pods during a rolling update\n        maxUnavailable: 1\n    # enable auoscaling if you want to scale the number of replicas based on CPU usage\n    autoscaling:\n      enabled: true\n      minReplicas: set-by-customer\n      maxReplicas: set-by-customer\n      targetCPUUtilizationPercentage: set-by-customer\n    # required if you rely on a load balancer\n    # the controller mirrors the address of this service\'s endpoints to the load-balancer status of all Ingress objects it satisfies.\n    publishService:\n      enabled: true\n    # set a load balancer if you want your Nginx to be publicly accessible\n    service:\n      enabled: true\n      annotations:\n        # Qovery managed DNS requieres *.$domain (something like: *.<cluster_id>.<given_dns_name>)\n        external-dns.alpha.kubernetes.io/hostname: "set-by-customer"\n      externalTrafficPolicy: "Local"\n      sessionAffinity: ""\n      healthCheckNodePort: 0\n'))),Object(l.b)(s.a,{value:"scaleway",mdxType:"TabItem"},Object(l.b)("p",null,"Here is an example with Nginx Ingress Controller on Scaleway:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'ingress-nginx:\n  controller:\n    useComponentLabel: true\n    admissionWebhooks:\n      enabled: set-by-customer\n    # enable if you want metrics scrapped by prometheus\n    metrics:\n      enabled: set-by-customer\n      serviceMonitor:\n        enabled: set-by-customer\n    config:\n      # set global default file size limit to 100m\n      proxy-body-size: 100m\n      # hide Nginx version\n      server-tokens: "false"\n      # required for X-Forwarded-for to work\n      use-proxy-protocol: "true"\n    # the Ingress Class name to be used by Ingresses (use "nginx-qovery" for Qovery application/container deployments)\n    ingressClass: nginx-qovery\n    extraArgs:\n      # Kubernetes path of the default Cert-manager TLS certificate (if used)\n      default-ssl-certificate: "cert-manager/letsencrypt-acme-qovery-cert"\n    updateStrategy:\n      rollingUpdate:\n        # set the minimum acceptable number of unavailable pods during a rolling update\n        maxUnavailable: 1\n    # enable auoscaling if you want to scale the number of replicas based on CPU usage\n    autoscaling:\n      enabled: true\n      minReplicas: set-by-customer\n      maxReplicas: set-by-customer\n      targetCPUUtilizationPercentage: set-by-customer\n    # required if you rely on a load balancer\n    # the controller mirrors the address of this service\'s endpoints to the load-balancer status of all Ingress objects it satisfies.\n    publishService:\n      enabled: true\n    # set a load balancer if you want your Nginx to be publicly accessible\n    service:\n      enabled: true\n      # https://github.com/scaleway/scaleway-cloud-controller-manager/blob/master/docs/loadbalancer-annotations.md\n      annotations:\n        service.beta.kubernetes.io/scw-loadbalancer-forward-port-algorithm: "leastconn"\n        service.beta.kubernetes.io/scw-loadbalancer-protocol-http: "false"\n        service.beta.kubernetes.io/scw-loadbalancer-proxy-protocol-v1: "false"\n        service.beta.kubernetes.io/scw-loadbalancer-proxy-protocol-v2: "true"\n        service.beta.kubernetes.io/scw-loadbalancer-health-check-type: tcp\n        service.beta.kubernetes.io/scw-loadbalancer-use-hostname: "true"\n        # set Scaleway load balancer type https://www.scaleway.com/en/load-balancer/ (ex: LB-GP-S, LB-GP-M, LB-GP-L, LB-GP-XL)\n        service.beta.kubernetes.io/scw-loadbalancer-type: "set-by-customer"\n        # Qovery managed DNS requieres *.$domain (something like: *.<cluster_id>.<given_dns_name>)\n        external-dns.alpha.kubernetes.io/hostname: "set-by-customer"\n      externalTrafficPolicy: "Local"\n')))),Object(l.b)("h4",{id:"other-ingress-controllers"},"Other Ingress Controllers"),Object(l.b)("p",null,"Qovery supports other Ingress Controllers. Please contact us if you want to use another one. We will be happy to help you."),Object(l.b)("h3",{id:"dns"},"DNS"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but strongly recommended)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Used to easily reach your applications with DNS records, even on private network")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"You will have easy access with dns names to your services, you'll have to use IPs")))),Object(l.b)("p",null,"Qovery uses ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/kubernetes-sigs/external-dns"}),"External DNS")," to automatically configure DNS records for your applications."),Object(l.b)("p",null,"If you don't want or can't add your own DNS provider, Qovery proposes it's own managed sub-domain DNS provider for free.\nYou'll then be able to later add your custom DNS record (no matter the provider) to point to your Qovery DNS sub-domain."),Object(l.b)("h4",{id:"external-dns"},"External DNS"),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"demo",placeholder:"Select a platform",select:!1,size:null,values:[{group:"ExternalDns",label:"Demo & QoveryDNS",value:"demo"},{group:"ExternalDns",label:"Cloudflare",value:"cloudflare"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"demo",mdxType:"TabItem"},Object(l.b)("p",null,"Here is one example with Qovery DNS provider:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"external-dns:\n  fullnameOverride: external-dns\n  # set pdns for Qovery DNS managed (or you can use any supported provider by external-dns)\n  provider: pdns\n  # will use the domain name given by Qovery during the cluster setup phease\n  domainFilters: [*domain]\n  # an owner ID is set to avoid conflicts in case of multiple Qovery clusters\n  txtOwnerId: *shortClusterId\n  # a prefix to help Qovery to debug in case of issues\n  txtPrefix: *externalDnsPrefix\n  # set the Qovery DNS provider configuration\n  pdns:\n    apiUrl: *qoveryDnsUrl\n    apiKey: *jwtToken\n    apiPort: 443\n"))),Object(l.b)(s.a,{value:"cloudflare",mdxType:"TabItem"},Object(l.b)("p",null,"Here is one example with Cloudflare:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'external-dns:\n  # set the provider to use\n  provider: set-by-customer\n  # keep the config you want to use and remove the others. Configure the provider you want to use.\n  cloudflare:\n    apiToken: set-by-customer\n    email: set-by-customer\n    proxied: set-by-customer\n  pdns:\n    # Qovery DNS: apiUrl: *qoveryDnsUrl\n    apiUrl: set-by-customer\n    # Qovery DNS: apiPort: "443"\n    apiPort: set-by-customer\n    # Qovery DNS: apiKey: "443"\n    apiKey: set-by-customer\n  # Make external DNS ignore this ingress https://github.com/kubernetes-sigs/external-dns/issues/1910#issuecomment-976371247\n  annotationFilter: external-dns.alpha.kubernetes.io/exclude notin (true)\n  # set domainFilters to the domain you want to manage: [*domain]\n  domainFilters: set-by-customer\n  triggerLoopOnEvent: true\n  policy: sync\n  # avoid dns collision with other external-dns instances\n  txtOwnerId: set-by-customer\n  txtPrefix: set-by-customer\n  # set the number of replicas you want to use\n  replicas: 1\n  # set the rolling update strategy you want to apply\n  updateStrategy:\n    type: set-by-customer\n  # remove if you don\'t want to use a custom image\n  image:\n    registry: set-by-customer\n    repository: set-by-customer\n    tag: 0.13.2-debian-11-r17\n  # set resources\n  resources:\n    limits:\n      cpu: 50m\n      memory: 100Mi\n    requests:\n      cpu: 50m\n      memory: 100Mi\n')))),Object(l.b)("h3",{id:"logging"},"Logging"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but strongly recommended)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retrieve and store application's log history")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"You'll have live logs, but you will miss log history for debugging purpose")))),Object(l.b)("p",null,"Qovery uses ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://grafana.com/oss/loki/"}),"Loki")," to store your logs in a S3 compatible bucket and ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://grafana.com/docs/loki/latest/clients/promtail/"}),"Promtail")," to collect your logs."),Object(l.b)("h4",{id:"loki"},"Loki"),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"demo",placeholder:"Select a platform",select:!1,size:null,values:[{group:"Loki",label:"Demo",value:"demo"},{group:"Loki",label:"AWS S3",value:"s3"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"demo",mdxType:"TabItem"},Object(l.b)("p",null,"Here is a configuration ",Object(l.b)("strong",{parentName:"p"},"in Memory (no persistence)")," for Loki:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"loki:\n  fullnameOverride: loki\n  loki:\n    # no auth is set for internal cluster usage\n    auth_enabled: false\n    ingester:\n      lifecycler:\n        ring:\n          kvstore:\n            # we store it in memory for the demo, you'll lose history once Loki restarts\n            store: inmemory\n          replication_factor: 1\n    schema_config:\n      configs:\n        - from: 2020-05-15\n          store: boltdb-shipper\n          object_store: filesystem\n          schema: v11\n          index:\n            prefix: index_\n            period: 24h\n  monitoring:\n    # all the monitoring part is disabled to reduce resource footprint for the demo usage\n    dashboards:\n      enabled: false\n    rules:\n      enabled: false\n    serviceMonitor:\n      enabled: false\n      metricsInstance:\n        enabled: false\n    selfMonitoring:\n      enabled: false\n      grafanaAgent:\n        installOperator: false\n    grafanaAgent:\n      enabled: false\n    lokiCanary:\n      enabled: false\n  test:\n    enabled: false\n  gateway:\n    enabled: false\n  # we use a single binary to reduce resource footprint for the demo usage\n  singleBinary:\n    replicas: 1\n    persistence:\n      enabled: false\n    extraVolumes:\n      - name: data\n        emptyDir: {}\n      - name: storage\n        emptyDir: {}\n    extraVolumeMounts:\n      - name: data\n        mountPath: /data\n      - name: storage\n        mountPath: /var/loki\n"))),Object(l.b)(s.a,{value:"s3",mdxType:"TabItem"},Object(l.b)("p",null,"Here is a configuration example with AWS S3 as storage backend:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"loki:\n  # remove if you don't want to use a custom image\n  kubectlImage:\n    registry: set-by-customer\n    repository: set-by-customer\n  loki:\n    # remove if you don't want to use a custom image\n    image:\n      registry: set-by-customer\n      repository: set-by-customer\n    # set if you want to use authentication\n    auth_enabled: false\n    commonConfig:\n      # for simple usage, without high throughput, you can use the 1 replica only\n      # note: replication is assured by the storage backend\n      replication_factor: 1\n    ingester:\n      chunk_idle_period: 3m\n      chunk_block_size: 262144\n      chunk_retain_period: 1m\n      max_transfer_retries: 0\n      lifecycler:\n        ring:\n          kvstore:\n            store: memberlist\n          replication_factor: 1\n    memberlist:\n      abort_if_cluster_join_fails: false\n      bind_port: 7946\n      join_members:\n        # set loki headless service\n        - loki-headless.logging.svc:7946\n      max_join_backoff: 1m\n      max_join_retries: 10\n      min_join_backoff: 1s\n    limits_config:\n      ingestion_rate_mb: 20\n      ingestion_burst_size_mb: 30\n      enforce_metric_name: false\n      reject_old_samples: true\n      reject_old_samples_max_age: 168h\n      max_concurrent_tail_requests: 100\n      split_queries_by_interval: 15m\n      max_query_lookback: 12w\n    compactor:\n      working_directory: /data/retention\n      # configure storage provider for the compactor\n      shared_store: aws\n      compaction_interval: 10m\n      retention_enabled: set-by-customer\n      retention_delete_delay: 2h\n      retention_delete_worker_count: 150\n    table_manager:\n      retention_deletes_enabled: set-by-customer\n      retention_period: set-by-customer\n    schema_config:\n      configs:\n        # set the schema for the index (2020 version can be deleted on a fresh install)\n        - from: 2020-05-15\n          store: boltdb-shipper\n          object_store: s3\n          schema: v11\n          index:\n            prefix: index_\n            period: 24h\n        - from: 2023-06-01\n          store: boltdb-shipper\n          object_store: s3\n          schema: v12\n          index:\n            prefix: index_\n            period: 24h\n    storage:\n      # configure the object storage backend\n      bucketNames:\n        chunks:\n        ruler:\n        admin:\n      type: s3\n      s3:\n        s3:\n        region:\n        s3ForcePathStyle:\n        insecure:\n    storage_config:\n      boltdb_shipper:\n        active_index_directory: /data/loki/index\n        shared_store: s3\n        resync_interval: 5s\n        cache_location: /data/loki/boltdb-cache\n  monitoring:\n    dashboards:\n      enabled: false\n    rules:\n      enabled: false\n    serviceMonitor:\n      enabled: false\n      metricsInstance:\n        enabled: false\n    selfMonitoring:\n      enabled: false\n      grafanaAgent:\n        installOperator: false\n    grafanaAgent:\n      enabled: false\n    lokiCanary:\n      enabled: false\n  test:\n    enabled: false\n  gateway:\n    enabled: false\n  # set the single binary version for basic usage\n  singleBinary:\n    replicas: 1\n    # set resources\n    resources:\n      limits:\n        cpu: 1\n        memory: 2Gi\n      requests:\n        cpu: 300m\n        memory: 1Gi\n    persistence:\n      enabled: false\n    extraVolumes:\n      - name: data\n        emptyDir: {}\n      - name: storage\n        emptyDir: {}\n    extraVolumeMounts:\n      - name: data\n        mountPath: /data\n      - name: storage\n        mountPath: /var/loki\n    # set disk persistence to reduce data loss in case of pod crash\n    # persistence:\n    #   storageClass: set-by-customer\n  serviceAccount:\n    annotations: {}\n")))),Object(l.b)("h4",{id:"promtail"},"Promtail"),Object(l.b)("p",null,"A configuration example compatible with all providers:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"promtail:\n  fullnameOverride: promtail\n  # promtail requires to be spawned in kube-system namespace\n  namespace: kube-system\n  priorityClassName: system-node-critical\n  config:\n    clients:\n      # forward logs to Loki\n      - url: *promtailLokiUrl\n    snippets:\n      extraRelabelConfigs:\n        - action: labelmap\n          # required to be able to watch logs from Qovery console interface\n          regex: __meta_kubernetes_pod_label_(qovery_com_service_id|qovery_com_service_type|qovery_com_environment_id)\n")),Object(l.b)("h3",{id:"certificates"},"Certificates"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but strongly recommended)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Cert-manager helps you to get TLS certificates through Let's Encrypt")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Without it, you will not be able to automatically get TLS certificates")))),Object(l.b)("p",null,"Qovery uses ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://cert-manager.io/"}),"Cert Manager")," to automatically get TLS certificates for your applications."),Object(l.b)("h4",{id:"cert-manager"},"Cert Manager"),Object(l.b)("p",null,"Here is the minimal setup for all cloud providers:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"cert-manager:\n  fullnameOverride: cert-manager\n  # CRD are required\n  installCRDs: true\n  replicaCount: 1\n  startupapicheck:\n    jobAnnotations:\n      helm.sh/hook: post-install,post-upgrade\n    rbac:\n      annotations:\n        helm.sh/hook: post-install,post-upgrade\n    serviceAccount:\n      annotations:\n        helm.sh/hook: post-install,post-upgrade\n")),Object(l.b)("h4",{id:"qovery-cert-manager-webhook"},"Qovery Cert Manager Webhook"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but if you're using Qovery DNS Provider)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required to get Let's Encrypt TLS if Qovery DNS Provider is used")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Without it, you will not be able to automatically get TLS certificates with Qovery DNS Provider")))),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"qovery",placeholder:"Select a platform",select:!1,size:null,values:[{group:"QoveryCertManagerWebhook",label:"Qovery DNS",value:"qovery"},{group:"QoveryCertManagerWebhook",label:"",value:""}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"qovery",mdxType:"TabItem"},Object(l.b)("p",null,"A configuration example compatible with all providers:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"qovery-cert-manager-webhook:\n  fullnameOverride: qovery-cert-manager-webhook\n  certManager:\n    # set the same namespace than cert-manager\n    namespace: qovery\n    serviceAccountName: cert-manager\n  secret:\n    apiUrl: *qoveryDnsUrl\n    apiKey: *jwtToken\n")))),Object(l.b)("h4",{id:"cert-manager-configs"},"Cert Manager Configs"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This is an helper to deploy cert-manager config. But you can manually set it")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Installing Cert-manager is not enough, you have to configure it to get TLS working")))),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"demo",placeholder:"Select a platform",select:!1,size:null,values:[{group:"ExternalDns",label:"Demo",value:"demo"},{group:"ExternalDns",label:"Qovery DNS",value:"qovery"},{group:"ExternalDns",label:"Cloudflare",value:"cloudflare"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"demo",mdxType:"TabItem"},Object(l.b)("p",null,"This is the configuration of Cert Manager itself. It is used by all Cert Manager components."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"cert-manager-configs:\n  fullnameOverride: cert-manager-configs\n  # set pdns to use Qovery DNS provider\n  externalDnsProvider: pdns\n  managedDns: [*domain]\n  acme:\n    letsEncrypt:\n      emailReport: *acmeEmailAddr\n      # As it's a demo cluster, we use the staging environment to avoid rate limit issues\n      acmeUrl: https://acme-staging-v02.api.letsencrypt.org/directory\n  provider:\n    # set the provider of your choice or use the Qovery DNS provider\n    pdns:\n      apiPort: 443\n      apiUrl: *qoveryDnsUrl\n      apiKey: *jwtToken\n"))),Object(l.b)(s.a,{value:"qovery",mdxType:"TabItem"},Object(l.b)("p",null,"This is the configuration of Cert Manager itself. It is used by all Cert Manager components."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"cert-manager-configs:\n  fullnameOverride: cert-manager-configs\n  # set pdns to use Qovery DNS provider\n  externalDnsProvider: pdns\n  managedDns: [*domain]\n  acme:\n    letsEncrypt:\n      emailReport: *acmeEmailAddr\n      # set the Let's Encrypt URL\n      # Test: https://acme-staging-v02.api.letsencrypt.org/directory\n      # Prod: https://acme-v02.api.letsencrypt.org/directory\n      acmeUrl: https://acme-v02.api.letsencrypt.org/directory\n  provider:\n    # set the provider of your choice or use the Qovery DNS provider\n    pdns:\n      apiPort: 443\n      apiUrl: *qoveryDnsUrl\n      apiKey: *jwtToken\n"))),Object(l.b)(s.a,{value:"cloudflare",mdxType:"TabItem"},Object(l.b)("p",null,"This is the configuration of Cert Manager itself. It is used by all Cert Manager components."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'cert-manager-configs:\n  fullnameOverride: cert-manager-configs\n  # set pdns to use Qovery DNS provider\n  externalDnsProvider: cloudflare\n  managedDns: [*domain]\n  acme:\n    letsEncrypt:\n      emailReport: *acmeEmailAddr\n      acmeUrl: https://acme-v02.api.letsencrypt.org/directory\n  provider:\n    cloudflare:\n      apiToken: "set your Cloudflare API token here"\n      email: "set your Cloudflare email here"\n')))),Object(l.b)("p",null,"Qovery uses ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/kubernetes-sigs/metrics-server"}),"Metrics Server")," to collect metrics from your Kubernetes cluster and scale your applications automatically based on custom metrics."),Object(l.b)("h2",{id:"observability"},"Observability"),Object(l.b)("h3",{id:"metrics-server"},"Metrics Server"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"Required")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No (but strongly recommended)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If deployed")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Mandatory if you want to retrive pod metrics for the Qovery agent and if you want to be able to use the horizontal pod scaling")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("strong",{parentName:"td"},"If missing")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No HPA and no application metrics in the QOveyr console")))),Object(l.b)(o.a,{centered:!0,className:"rounded",defaultValue:"demo",placeholder:"Select a platform",select:!1,size:null,values:[{group:"MetricsServer",label:"Demo",value:"demo"},{group:"MetricsServer",label:"AWS",value:"aws"},{group:"MetricsServer",label:"GCP",value:"gcp"},{group:"MetricsServer",label:"Scaleway",value:"scaleway"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"aws",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"metrics-server:\n  # create api service to be able to use hpa/vpa\n  apiService:\n    create: true\n  # set rolling restart strategy\n  updateStrategy:\n    type: set-by-customer\n  # set resources\n  resources:\n    limits:\n      cpu: set-by-customer\n      memory: set-by-customer\n    requests:\n      cpu: set-by-customer\n      memory: set-by-customer\n"))),Object(l.b)(s.a,{value:"gcp",mdxType:"TabItem"},Object(l.b)("p",null,"Nothing needs to be deployed, as GCP already provides a managed metrics server.")),Object(l.b)(s.a,{value:"scaleway",mdxType:"TabItem"},Object(l.b)("p",null,"Nothing needs to be deployed, as Scaleway already provides a managed metrics server.")),Object(l.b)(s.a,{value:"demo",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"metrics-server:\n  fullnameOverride: metrics-server\n  defaultArgs:\n    - --cert-dir=/tmp\n    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\n    - --kubelet-use-node-status-port\n    - --metric-resolution=15s\n    - --kubelet-insecure-tls\n  apiService:\n    create: false\n")))))}m.isMDXComponent=!0},443:function(e,t,n){"use strict";n(445);var a=n(0),r=n.n(a),l=n(442),o=n.n(l);n(132);t.a=function(e){var t=e.children,n=e.classNames,a=e.fill,l=e.icon,s=e.type,c=null;switch(s){case"danger":c="alert-triangle";break;case"success":c="check-circle";break;case"warning":c="alert-triangle";break;default:c="info"}return r.a.createElement("div",{className:o()(n,"alert","alert--"+s,{"alert--fill":a,"alert--icon":!1!==l}),role:"alert"},!1!==l&&r.a.createElement("i",{className:o()("feather","icon-"+(l||c))}),t)}},451:function(e,t,n){"use strict";var a=n(0),r=n.n(a),l=(n(442),n(450)),o=n.n(l);n(133);t.a=function(e){var t=e.children,n=e.headingDepth,l=e.hideFeedbackQuestion,s="undefined"!=typeof window?window.location:null,c={title:"Tutorial on "+s+" failed",body:"The tutorial on:\n\n"+s+"\n\nHere's what went wrong:\n\n\x3c!-- Insert command output and details. Thank you for reporting! :) --\x3e"},b="https://github.com/qovery/documentation/issues/new?"+o.a.stringify(c),i=Object(a.useState)(null),u=i[0],d=i[1];return r.a.createElement("div",{className:"steps steps--h"+n},t,!l&&!u&&r.a.createElement("div",{className:"steps--feedback"},"How was it? Did this tutorial work?\xa0\xa0",r.a.createElement("span",{className:"button button--sm button--primary",onClick:function(){return d("yes")}},"Yes"),"\xa0\xa0",r.a.createElement("a",{href:b,target:"_blank",className:"button button--sm button--primary"},"No")),"yes"==u&&r.a.createElement("div",{className:"steps--feedback steps--feedback--success"},"Thanks! If you're enjoying Qovery please consider ",r.a.createElement("a",{href:"https://github.com/qovery/documentation/",target:"_blank"},"starring our Github repo"),"."))}},456:function(e,t,n){"use strict";var a=n(1),r=(n(462),n(457),n(52),n(29),n(22),n(21),n(0)),l=n.n(r),o=n(465),s=n(442),c=n.n(s),b=n(450),i=n.n(b),u=n(464),d=37,m=39;function p(e){var t=e.block,n=e.centered,a=e.changeSelectedValue,r=e.className,o=e.handleKeydown,s=e.style,b=e.values,i=e.selectedValue,u=e.tabRefs;return l.a.createElement("div",{className:n?"tabs--centered":null},l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:c()("tabs",r,{"tabs--block":t}),style:s},b.map((function(e){var t=e.value,n=e.label;return l.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":i===t,className:c()("tab-item",{"tab-item--active":i===t}),key:t,ref:function(e){return u.push(e)},onKeyDown:function(e){return o(u,e.target,e)},onFocus:function(){return a(t)},onClick:function(){return a(t)}},n)}))))}function g(e){var t=e.placeholder,n=e.selectedValue,a=e.changeSelectedValue,r=e.size,s=e.values,c=s;if(c[0].group){var b=_.groupBy(c,"group");c=Object.keys(b).map((function(e){return{label:e,options:b[e]}}))}return l.a.createElement(o.a,{className:"react-select-container react-select--"+r,classNamePrefix:"react-select",options:c,isClearable:n,placeholder:t,value:s.find((function(e){return e.value==n})),onChange:function(e){return a(e?e.value:null)}})}t.a=function(e){e.block,e.centered;var t=e.children,n=e.defaultValue,o=e.groupId,s=e.label,c=e.placeholder,b=e.select,y=e.size,O=(e.style,e.values),j=e.urlKey,h=Object(u.a)(),f=h.tabGroupChoices,N=h.setTabGroupChoices,v=Object(r.useState)(n),w=v[0],x=v[1];if(null!=o){var k=f[o];null!=k&&k!==w&&x(k)}var C=function(e){x(e),null!=o&&N(o,e)},_=[],I=function(e,t,n){switch(n.keyCode){case m:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case d:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}};return Object(r.useEffect)((function(){if("undefined"!=typeof window&&window.location&&j){var e=i.a.parse(window.location.search);e[j]&&x(e[j])}}),[]),l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"margin-bottom--"+(y||"md")},s&&l.a.createElement("div",{className:"margin-vert--sm"},s),O.length>1&&(b?l.a.createElement(g,Object(a.a)({changeSelectedValue:C,handleKeydown:I,placeholder:c,selectedValue:w,size:y,tabRefs:_},e)):l.a.createElement(p,Object(a.a)({changeSelectedValue:C,handleKeydown:I,selectedValue:w,tabRefs:_},e)))),r.Children.toArray(t).filter((function(e){return e.props.value===w}))[0])}},461:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement(r.a.Fragment,null,e.children)}}}]);