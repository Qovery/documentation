## Connecting from the internet

Your <%= service %> can be reached from the internet by publicly exposing at least one of its ports (See the [Ports](#ports) section to know more). Once this is done, Qovery will generate and assign a domain to your application (See [this section](#qovery-provided-domains) to know more). You can customize the domain assigned to your application via the `Domain` section in the settings (see [this section](#custom-domains) to know more).

### Qovery provided domains

For each port publicly exposed, a domain is automatically assigned by Qovery to your <%= service %>. Qovery will manage for you the networking and the TLS configuration for these domains. 

Example: `p80-zdf72de72-z709e1a88-gtw.za8ad0657.bool.sh` or `<service_name>-p80-zdf72de72-z709e1a88-gtw.za8ad0657.bool.sh` for helm services.

Note:
- each service deployed on the same cluster will have the same root domain assigned (example: `za8ad0657.bool.sh`)
- the first characters of the domain (before the `-`) is based on the portName given to the port associated with this domain (See the [port section](#ports))
- a default domain (without the portName) is assigned to the `default port`(See the [port section](#ports)). Example `zdf72de72-z709e1a88-gtw.za8ad0657.bool.sh`

**Special Case - Preview Environment** 
For each port exposed publicly, an additional domain will be created with the following pattern `portName-prId-srvName-envSourceName.cluster_domain`:
- portName: is the port name, as explained above
- prID: is the id of the PR that has generated the preview environment
- srvName: is the name of the service
- envSourceName: is the name of the blueprint environment that has created the current preview environment

domain example: `p80-123-frontend-blueprint.za8ad0657.bool.sh`

### Custom domains

If you prefer to assign your own domain to the <%= service %>, you can customize it from the "Domain" section within the <%= service %> settings.

You can customize the domain of your <%= service %> in different ways, depending on what you want to achieve:
* You want to use your own domain for your <%= service %>
* You want to modify the subdomain assigned to your <%= service %> by Qovery (i.e. change `p80-zdf72de72-z709e1a88-gtw.za8ad0657.bool.sh` into `my-app-domain.za8ad0657.bool.sh`). See [this section][#qovery-provided-domains] to know more about these domains.

In both cases, you can assign the new custom domain by pressing the `Add Domain` button.

<p align="center">
  <img src="/img/configuration/application/app-16.png" alt="Application Domains" />
</p>

<Alert type="info">

This configuration will be **automatically removed** on every cloned environment or preview environment in order to avoid domain collision.

</Alert>

#### Configuring your own domain

Once the domain is added within the Qovery console (Example: mydomain.com), you need to configure within your DNS two `CNAME` records pointing to the domain provided by Qovery, as shown in the UI (example: mydomain.com CNAME za7cc1b71-z4b8474b3-gtw.zc531a994.rustrocks.cloud and *.mydomain.com CNAME za7cc1b71-z4b8474b3-gtw.zc531a994.rustrocks.cloud). 

Having a wildcard domain entry (example: *.mydomain.com) configured on your DNS will avoid you to modify the Qovery setup every time you want to add a new subdomain. If `wildcard` is not supported by your DNS provider, you will have to configure each subdomain manually.

If a service needs to expose more than one port publicly, you can define a dedicated subdomain to redirect the traffic on the right port by setting the “Port Name” value within the [port settings](#ports).

After re-deploying the service, Qovery will automatically handle the TLS/SSL certificate creation and renewal for the configured domain.

<p align="center">
  <img src="/img/configuration/application/custom-domain.png" alt="Custom Domain" />
</p>

<Alert type="info">

[We prepared a guide and video tutorial that explains how to set up your custom domain.][guides.getting-started.setting-custom-domain]

</Alert>

** Special case - domain behind a CDN **

If your service is behind a CDN using a `proxy mode` (i.e. the traffic is routed through the CDN to Qovery), make sure to enable the option `Domain behind a CDN` and disable the option "Generate certificate" on the domain setup. Since the certificate of your domain is directly managed by the CDN, Qovery won't be able to do that for you and it will raise warnings on your application status.

<p align="center">
  <img src="/img/configuration/application/cdn-proxy.png" alt="CDN Proxy" />
</p>

If you are using Cloudflare to manage your CDN, we can also manage automatically your custom domain configuration via a wildcard domain setup for the whole cluster. Check our [documentation here][docs.using-qovery.configuration.clusters#use-custom-domain-and-wildcard-tls-for-the-whole-cluster-beta]

#### Change the auto assigned sub-domain

You can specify a different sub-domain for your <%= service %> as long as it belongs to the assigned cluster domain (see [Qovery provided domains](#qovery-provided-domains)). 
Example: 
- your current domain is zdf72de71-z709e1a85-gtw.za8ad0659.bool.sh (so your assigned cluster domain is `za8ad0659.bool.sh`)
- you can enter a new custom domain `myfrontend.za8ad0659.bool.sh` (since it is a subdomain of the cluster domain)

The <%= service %> will now be accessible from both the default and the new custom domain.

<Alert type="info">

Qovery does not check collision in the domain declaration. Make sure you assign a unique subdomain within your cluster.

</Alert>